# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - fast-api-reference

on:
  push:
    branches:
      - entra-auth
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    environment:
      name: 'dev'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Log in to Azure via OIDC
        uses: azure/login@v1
        with:
          # auth-type: SERVICE_PRINCIPAL
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: Set environment variables for Terraform
        run: |
          # The azure/login action exports the OIDC token to this file
          echo "ARM_FEDERATED_TOKEN_FILE=${{ runner.temp }}/azure_federated_token" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          # Run terraform
          terraform apply -auto-approve

          # Ensure we're creating a fresh output file
          rm -f terraform_output.json
          # Execute terraform output and save to temp file
          terraform output -json > terraform_output.raw
          
          # Remove the first line (command echo) and save to final file
          sed '1d' terraform_output.raw > terraform_output.json
          
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: terraform config
          path: terraform_output.json

  build:
    runs-on: ubuntu-latest
    needs: terraform
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Download Terraform config artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform config
          path: .

      - name: Copy and format Terraform config to frontend and backend
        run: |
          # Check if file exists and is valid JSON
          if [ -f "terraform_output.json" ]; then
            echo "Terraform output file found"
            ls -a
            # For backend - can use the original format
            cp terraform_output.json backend/terraform.config.json
            
            # Validate the JSON files
            echo "Frontend JSON:"
            cat frontend/terraform.config.json
            echo "Backend JSON:"
            cat backend/terraform.config.json
          else
            echo "Error: terraform_output.json not found!"
            exit 1
          fi

      - name: Download npm
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          cd backend
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          
      - name: Install Node dependencies
        run: |
          cd frontend
          npm install
      
      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Zip artifact for deployment
        run: |
          cd backend
          zip -r ../release.zip ./*

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'dev'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Download Terraform config artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform config
          path: ./terraform-config

      - name: Extract web app name from terraform config
        id: extract-app-name
        run: |
          # Install jq if needed
          sudo apt-get install -y jq
          
          # Read the web app name from terraform_output.json and set it as output
          APP_NAME=$(jq -r '.web_app_name.value' ./terraform-config/terraform_output.json)
          echo "web_app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "Using web app name: $APP_NAME"

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID  }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID  }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Deploy to Azure Web App named by the terraform config file'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: ${{ steps.extract-app-name.outputs.web_app_name }}
          slot-name: 'Production'
          
