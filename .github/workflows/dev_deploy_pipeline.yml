name: Development Deployment

on:
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

jobs:
  dev:
    # Run on push to entra-auth branch or PR to main
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
      (github.event_name == 'workflow_dispatch')
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/.entraid_web_deployment.yml
    with:
      environment: 'dev'
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
  test-deploy:
    # Run on tags only or manual trigger
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
      (github.event_name == 'workflow_dispatch')
    needs: dev-deploy  # Required to wait for dev to complete
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/.entraid_web_deployment.yml
    with:
      environment: 'test'
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  prod-deploy:
    # Run on tags only or manual trigger
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
      (github.event_name == 'workflow_dispatch')
    # Always waits for test-deploy to be successful first
    needs: test-deploy
    # Configure this job to use the prod environment
    environment:
      name: 'prod'  # This enables approvals if configured in the GitHub environment settings
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/.entraid_web_deployment.yml
    with:
      environment: 'prod'
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}